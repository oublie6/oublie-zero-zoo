// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package usercenter

import (
	"context"

	"github.com/oublie6/oublie-zero-zoo/app/user-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserInfoReq  = pb.GetUserInfoReq
	GetUserInfoResp = pb.GetUserInfoResp
	ReturnMsgReq    = pb.ReturnMsgReq
	ReturnMsgResp   = pb.ReturnMsgResp

	Usercenter interface {
		GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error)
		ReturnMsg(ctx context.Context, in *ReturnMsgReq, opts ...grpc.CallOption) (*ReturnMsgResp, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

func (m *defaultUsercenter) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUsercenter) ReturnMsg(ctx context.Context, in *ReturnMsgReq, opts ...grpc.CallOption) (*ReturnMsgResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.ReturnMsg(ctx, in, opts...)
}
